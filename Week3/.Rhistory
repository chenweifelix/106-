power1 <- c(6097059332, 6425887925, 6982579022, 7323992602.53436, 7954239517)
# 製造業自民國87至民國91年的年度用電量（度）
power2 <- c(59090445718, 61981666330, 67378329131, 66127460204.6482, 69696372914.6949)
year1.answer1 <- power1[>7e9]
year1.answer1 <- (power1>7e9)
year1.answer1
year1.answer1 <- power1[(power1>7e9)]
year1.answer1
# 請選出年度(`year1`)中，社會服務業用電量超過`7e9` 的年份。
# （`7e9`是R 的科學符號，代表`7 * 10^9`）
year1
power1
names(c(year1, power1))
names(year1, power1)
names(power1) <- year1
power1
year1.answer1 <- power1[(power1>7e9)]
year1.answer1
year1.answer1[1]
year1.answer1[:1]
year1.answer1[]
year1.answer1[:]
year1.answer1 <- year1[(power1>7e9)]
year1.answer1[]
# 接著請計算「社會服務業從民國87年到91年的平均用電量」。
power1
power1.mean <- power1.mean()
power1.mean <- power1.mean(power1)
# 接著請計算「社會服務業從民國87年到91年的平均用電量」。
power1
# 接著請計算「社會服務業從民國87年到91年的平均用電量」。
power1.mean()
power1.mean <- mean(power1)
power1.mean <- mean(power1); power1.mean
# 請計算「社會服務業從民國87年到91年用電量的標準差」。
power1.sd <- sd(power1); power.sd
# 請計算「社會服務業從民國87年到91年用電量的標準差」。
power1.sd <- sd(power1); power1.sd
# 在統計中，我們會計算一筆數據的「標準分數」，算法為數據減去平均數後除以標準差。
# 請計算出「社會服務業從民國87年到91年用電量的標準分數」。
power1.mean
power.sd
power1.sd
power1.z <- (power1 - power1.mean)/power1.sd
power1.z
# 同樣的道理，請同學算出「製造業自民國87年至民國91年用電量的平均數、標準差和標準分數」。
power2.mean <- mean(power2)
# 同樣的道理，請同學算出「製造業自民國87年至民國91年用電量的平均數、標準差和標準分數」。
power2.mean <- mean(power2); power2.mean
power2.sd <- sd(power2)
power2.sd <- sd(power2); power2.sd
power2.z <- (power2-power2.mean)/power2.sd;power2.z
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- c(year1, power1); x
x
# 社會服務業自民國87至民國91年的年度用電量（度）
year1 <- 87:91
power1 <- c(6097059332, 6425887925, 6982579022, 7323992602.53436, 7954239517)
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- c(year1, power1); x
x
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- bind(year1, power1); x
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(year2, power2);y
y <- cbind(x, power2); y
names(y) <- c(year, social, manu)
names(y) <- c("year", "social", "manu")
y
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(x, power2); y
y[power1]
y["power1"]
y <- cbind(x, power2); y
y[2]
y[1,2]
y[1,2:]
y[1,2:5]
y[1,2:4]
y[1,4]
y[1,2]
y[1,1]
y[1,3]
y[,2]
y[,2]/10
y1 <- y[,2]/10
y2 <- y[,3]/10
com. <- cbind(year1, y1);com.
com. <- cbind(year1,y2)lcom.
com. <- cbind(year1,y2);com.
combine <- cbind(com.,y2);combine
com. <- cbind(year1, y1);com.
combine <- cbind(com.,y2);combine
combine[y1>y2]
combine[y1]
combine["y1"]
combine[,2] > comebine[,3]
combine[,2] > combine[,3]
com. <- cbind(year1, y1);com.
combine <- cbind(com.,y2);combine
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(x, power2); y
y2 <- y[,3]/10
com. <- cbind(year1, x);com.
combine <- cbind(com.,y2);combine
combine[,2] > combine[,3]
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(x, power2); y
y <- cbind(x, power2/10); y
y
y[,2]>y[,3]
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(x, power2/10); y
year1.answer2 <- <請填寫你的程式碼>
y[,2]>y[,3]
y2 <- y[,3]/10
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(x, power2/10); y
y[,2]>y[,3]
year[y[,2]>y[,3]]
y[y[,2]>y[,3]]
y[,2]>y[,3]
ans <- y[,2]>y[,3]
ans
ans <- c(:ans)
print(y[,1]=="TURE")
print(y[,1])
ans
y <- cbind(x, power2/10); y
names(y) <- c("year", "power1","power2")
y
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(x, power2/10); y
data.frame(y)
d <- data.frame(y)
names(d) <- c("year", "power1","power2")
d
ans[ans[power1]>ans[power2]]
ans[power1]
d[power1]
d
d[2]
d[2]>d[3]
d[d[2]>d[3]]
if d[2]>d[3]:
print(d[1])
if d[2]>d[3]:
print(d[1])
# 社會服務業自民國87至民國91年的年度用電量（度）
year1 <- 87:91
power1 <- c(6097059332, 6425887925, 6982579022, 7323992602.53436, 7954239517)
year1
year1[power1>7e9]
# 請選出年度(`year1`)中，社會服務業用電量超過`7e9` 的年份。
# （`7e9`是R 的科學符號，代表`7 * 10^9`）
year1
power1
year1[power1>7e9]
power1>7e9
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(x, power2/10); y
d <- data.frame(y)
names(d) <- c("year", "power1","power2")
power1 > power2
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
x <- cbind(year1, power1); x
y <- cbind(x, power2/10); y
d <- data.frame(y)
names(d) <- c("year", "power1","power2")
d
d[power1] > d[power2]
d["power1"] > d["power2"]
d[d["power1"] > d["power2"]]
# 社會服務業自民國87至民國91年的年度用電量（度）
year1 <- 87:91
power1 <- c(6097059332, 6425887925, 6982579022, 7323992602.53436, 7954239517)
# 製造業自民國87至民國91年的年度用電量（度）
power2 <- c(59090445718, 61981666330, 67378329131, 66127460204.6482, 69696372914.6949)
power1>7e9
year1[power1>7e9]
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
[power1>power2/10]
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
power1>power2/10
# 最後請根據年度，比較同年度中社會服務業用電量以及製造業用電量的十分之一，並列出前者高於後者的年份。
year1[power1>power2/10]
year1.answer2 <- year1[power1>power2/10]
submit()
submit
library(swirl)
rm(list=ls())
swirl()
swirl()
# 社會服務業自民國87至民國91年的年度用電量（度）
year1 <- 87:91
power1 <- c(6097059332, 6425887925, 6982579022, 7323992602.53436, 7954239517)
# 製造業自民國87至民國91年的年度用電量（度）
power2 <- c(59090445718, 61981666330, 67378329131, 66127460204.6482, 69696372914.6949)
year1.answer1 <- year1[power1>7e9]
year1.answer1 <- year1[power1>7e9]
year1.answer1
# 接著請計算「社會服務業從民國87年到91年的平均用電量」。
power1.mean <- mean(power1)
power1.mean
# 請計算「社會服務業從民國87年到91年用電量的標準差」。
power1.sd <- sd(power1)
# 在統計中，我們會計算一筆數據的「標準分數」，算法為數據減去平均數後除以標準差。
# 請計算出「社會服務業從民國87年到91年用電量的標準分數」。
power1.z <- (power1 - power1.mean)/power1.sd
power1.z
# 同樣的道理，請同學算出「製造業自民國87年至民國91年用電量的平均數、標準差和標準分數」。
power2.mean <- mean(power2)
power2.sd <- sd(power2)
power2.z <- (power2-power2.mean)/power2.sd
year1.answer2 <- year1[power1>power2/10]
submit()
mode(x)
length(x)
mode(g)
length(g)
g[1:2]
list(1, a=2)
g[[1]]
mode(g[[1]])
length(g[[1]])
mode(g[[10]])
g[["coefficients"]]
length(x) <- 10
x
x[7] <- 7
x
x[13] <- 13
x
x2 <- x[c(1,3,5,7,9,11)]
x2 <- x[c(1,3,5,7,9,11,13)]
x2
attributes(g)
names(g)
attr(g, "names")
attr(g, "class")
names(g)
class(g)
#' 以下內容改自prcomp 的範例程式碼
#'
#' PCA(Principle Components Analysis) 是一個資料分析時常用的技術，會在後面的課程中，會進一步的講解它的原理。
#' 在R 中，可以利用prcomp這個指令對USArrests這筆資料進行PCA 的分析，R 則會輸出一個計算後的物件。
pca <- prcomp(USArrests, scale = TRUE)
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer.1
answer1
#' 請同學將PCA的長度寫入變數answer2。
answer2 <- length(pca) #請將NULL替換成你的程式碼
answer2
#' 請同學將PCA的名字寫入變數answer3。
answer3 <- names(pca) #請將NULL替換成你的程式碼
answer3
help(prcomp)
View(pca)
#' PCA的元素中，有一個是各個principal components的standard deviations。
#' 請同學參考help(prcomp)說明中的Value章節。
#' 將各個principal components的standard deviation寫入變數answer4。
answer4 <- pca[["sdev"]] #請將NULL替換成你的程式碼
answer4
#' PCA 元素中，有一個是PCA的中心(center)。請同學參考help(prcomp)的說明，將該元素寫入變數answer5。
answer5 <- pca[["center"]] #請將NULL替換成你的程式碼
answer5
submit()
submit()
submit()
swirl()
submit()
submit()
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
#' 請同學將PCA的長度寫入變數answer2。
answer2 <- length(pca) #請將NULL替換成你的程式碼
answer2
#' 請同學將PCA的名字寫入變數answer3。
answer3 <- names(pca) #請將NULL替換成你的程式碼
answer3
#' PCA的元素中，有一個是各個principal components的standard deviations。
#' 請同學參考help(prcomp)說明中的Value章節。
#' 將各個principal components的standard deviation寫入變數answer4。
answer4 <- pca[["sdev"]] #請將NULL替換成你的程式碼
answer4
help(prcomp)
#' PCA 元素中，有一個是PCA的中心(center)。請同學參考help(prcomp)的說明，將該元素寫入變數answer5。
answer5 <- pca[["center"]] #請將NULL替換成你的程式碼
answer5
submit()
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
submit()
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- class(pca) #請將NULL替換成你的程式碼
answer1
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
submit()
#' 以下內容改自prcomp 的範例程式碼
#'
#' PCA(Principle Components Analysis) 是一個資料分析時常用的技術，會在後面的課程中，會進一步的講解它的原理。
#' 在R 中，可以利用prcomp這個指令對USArrests這筆資料進行PCA 的分析，R 則會輸出一個計算後的物件。
pca <- prcomp(USArrests, scale = TRUE)
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
#' 請同學將PCA的長度寫入變數answer2。
answer2 <- length(pca) #請將NULL替換成你的程式碼
answer2
#' 請同學將PCA的名字寫入變數answer3。
answer3 <- names(pca) #請將NULL替換成你的程式碼
answer3
#' PCA的元素中，有一個是各個principal components的standard deviations。
#' 請同學參考help(prcomp)說明中的Value章節。
#' 將各個principal components的standard deviation寫入變數answer4。
answer4 <- pca[["sdev"]] #請將NULL替換成你的程式碼
answer4
help(prcomp)
#' PCA 元素中，有一個是PCA的中心(center)。請同學參考help(prcomp)的說明，將該元素寫入變數answer5。
answer5 <- pca[["center"]] #請將NULL替換成你的程式碼
answer5
submit()
#' 以下內容改自prcomp 的範例程式碼
#'
#' PCA(Principle Components Analysis) 是一個資料分析時常用的技術，會在後面的課程中，會進一步的講解它的原理。
#' 在R 中，可以利用prcomp這個指令對USArrests這筆資料進行PCA 的分析，R 則會輸出一個計算後的物件。
pca <- prcomp(USArrests, scale = TRUE)
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
#' 請同學將PCA的長度寫入變數answer2。
answer2 <- length(pca) #請將NULL替換成你的程式碼
answer2
#' 請同學將PCA的名字寫入變數answer3。
answer3 <- names(pca) #請將NULL替換成你的程式碼
answer3
#' PCA的元素中，有一個是各個principal components的standard deviations。
#' 請同學參考help(prcomp)說明中的Value章節。
#' 將各個principal components的standard deviation寫入變數answer4。
answer4 <- pca[["sdev"]] #請將NULL替換成你的程式碼
answer4
help(prcomp)
#' PCA 元素中，有一個是PCA的中心(center)。請同學參考help(prcomp)的說明，將該元素寫入變數answer5。
answer5 <- pca[["center"]] #請將NULL替換成你的程式碼
answer5
submit()
#' 以下內容改自prcomp 的範例程式碼
#'
#' PCA(Principle Components Analysis) 是一個資料分析時常用的技術，會在後面的課程中，會進一步的講解它的原理。
#' 在R 中，可以利用prcomp這個指令對USArrests這筆資料進行PCA 的分析，R 則會輸出一個計算後的物件。
pca <- prcomp(USArrests, scale = TRUE)
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
#' 請同學將PCA的長度寫入變數answer2。
answer2 <- length(pca) #請將NULL替換成你的程式碼
answer2
#' 請同學將PCA的名字寫入變數answer3。
answer3 <- names(pca) #請將NULL替換成你的程式碼
answer3
#' PCA的元素中，有一個是各個principal components的standard deviations。
#' 請同學參考help(prcomp)說明中的Value章節。
#' 將各個principal components的standard deviation寫入變數answer4。
answer4 <- pca[["sdev"]] #請將NULL替換成你的程式碼
answer4
help(prcomp)
#' PCA 元素中，有一個是PCA的中心(center)。請同學參考help(prcomp)的說明，將該元素寫入變數answer5。
answer5 <- pca[["center"]] #請將NULL替換成你的程式碼
answer5
submit()
#' 以下內容改自prcomp 的範例程式碼
#'
#' PCA(Principle Components Analysis) 是一個資料分析時常用的技術，會在後面的課程中，會進一步的講解它的原理。
#' 在R 中，可以利用prcomp這個指令對USArrests這筆資料進行PCA 的分析，R 則會輸出一個計算後的物件。
pca <- prcomp(USArrests, scale = TRUE)
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
#' 請同學將PCA的長度寫入變數answer2。
answer2 <- length(pca) #請將NULL替換成你的程式碼
answer2
#' 請同學將PCA的名字寫入變數answer3。
answer3 <- names(pca) #請將NULL替換成你的程式碼
answer3
#' PCA的元素中，有一個是各個principal components的standard deviations。
#' 請同學參考help(prcomp)說明中的Value章節。
#' 將各個principal components的standard deviation寫入變數answer4。
answer4 <- pca[["sdev"]] #請將NULL替換成你的程式碼
answer4
help(prcomp)
#' PCA 元素中，有一個是PCA的中心(center)。請同學參考help(prcomp)的說明，將該元素寫入變數answer5。
answer5 <- pca[["center"]] #請將NULL替換成你的程式碼
answer5
submit()
#' 請同學找出PCA的「型態」。你的答案只可能是：「"character"」、「"numeric"」或「"list"」
answer1 <- mode(pca) #請將NULL替換成你的程式碼
answer1
submit()
submit()
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
```{r pressure, echo=FALSE}
---
title: "Week1"
author: "Felix"
date: "July 4, 2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
render("1-example.Rmd")
library(rmarkdown)
library(rmarkdown)
render("1-example.Rmd")
1+1
9%%5
library(rmarkdown)
render("1-example.Rmd")
library(rmarkdown)
render("name.Rmd")
library(rmarkdown)
render("1-example.Rmd")
install.packages("rmarkdown")
render
render
render
1+1 =>
1+1 ->
1+1
1+1
9%%5
render
knit()
```1+1
```9%%5
knitr::opts_chunk$set(echo = TRUE)
```{r}
9%%5
render
{r} [Click Me](https://chenweifelix.github.io/106-/Week1/Week1_hw.html)
setwd("C:/Users/user/Desktop/Academy/Programming/Github/106----_--------_---/Week3")
data -> read.csv("data.csv")
data -> read.csv("data.csv")
data = read.csv("data.csv")
data
View(data)
View(data)
table = table(data)
View(table)
data = read.csv("data.csv")
View(data)
data$mean
data$mean = (data$score)/25
data$mean
View(data)
read.table("artiemocionEJPA-final1.sav")
View(data)
names(mean) <- "score_mean"
names(data$mean) <- "score_mean"
View(data)
`colnames<-`("mean"", "score_mean")
colnames<-("mean"", "score_mean")
colnames<-("mean", "score_mean")
data$mean <- names<-("score_mean")
View(data)
data$mean = (data$score)/25
data$mean
data$mean <- names("score_mean")
View(data)
data$mean = (data$score)/25
data$mean <- names("score_mean")
View(data)
data$mean = (data$score)/25
View(data)
data$mean <- names("score_mean")
data$score_mean = (data$score)/25
View(data)
data$age_mean <- (data$age)/400
View(data)
data$score_mean = sum(data$score)/25
View(data)
data$age_mean <- sum(data$age)/400
View(data)
